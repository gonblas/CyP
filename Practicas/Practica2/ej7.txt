7. En una herrería hay 15 empleados que forman 5 grupos de 3 personas; los grupos se forman
de acuerdo al orden de llegada (los 3 primeros pertenecen al grupo 1, los 3 siguientes al grupo
2, y así sucesivamente). Ni bien conoce el grupo al que pertenece el empleado comienza a
trabajar (no debe esperar al resto de grupo para comenzar). Cada grupo debe hacer
exactamente P unidades de un producto (cada unidad es hecha por un único empleado). Al
terminar de hacer las P unidades de un grupo, sus 3 empleados se retiran. Nota: maximizar
la concurrencia; ningún grupo puede hacer unidades de más.


int emplead_act = 0, productos[5] = [(5) P];
sem mutexGrupo = 1, mutexProd[5] = ((5) 1);


Process Empleados[id:0..14]
{
    int nro_grupo;

    P(mutexGrupo);
    nro_grupo = emplead_act div 3; --div: division entera
    emplead_act++;
    V(mutexGrupo);

    P(mutexProd[nro_grupo]);
    while(productos[nro_grupo] > 0){
        productos[nro_grupo]--;
        V(mutexProd[nro_grupo]);
        --Hace el producto
        P(mutexProd[nro_grupo]);
    }
    V(mutexProd[nro_grupo]);
}