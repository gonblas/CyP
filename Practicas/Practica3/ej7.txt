7. Se debe simular una maratón con C corredores donde en la llegada hay UNA máquinas
expendedoras de agua con capacidad para 20 botellas. Además existe un repositor
encargado de reponer las botellas de la máquina. Cuando los C corredores han llegado al
inicio comienza la carrera. Cuando un corredor termina la carrera se dirigen a la máquina
expendedora, espera su turno (respetando el orden de llegada), saca una botella y se retira. Si
encuentra la máquina sin botellas, le avisa al repositor para que cargue nuevamente la
máquina con 20 botellas; espera a que se haga la recarga; saca una botella y se retira. Nota:
maximizar la concurrencia; mientras se reponen las botellas se debe permitir que otros
corredores se encolen.


Process Corredor[id:0..C-1]{
    Carrera.Comienzo();
    --Corre la carrera.
    Carrera.Terminar();
}


Process Repositor{
    while(true){
        Carrera.Reponer();
    }
}


Monitor Carrera {
    Cond cvCorredores, cvFila, cvRepositor, cvBotella;
    int corredores = 0, botellas = 20, esperando = 0;
    bool libre = true;
    
    Procedure Comienzo(){ 
        corredores++;
        if(corredores == C) {signal_all(cvCorredores);}
        else {wait(cvCorredores);}
    }


    Procedure Terminar() {
        if(not libre) {esperando++; wait(cvFila);}
        else {libre = false;}
        if(botellas == 0) {signal(cvRepositor); wait(cvBotella);}
        botellas--;
        if(esperando > 0) {esperando--; signal(cvFila);}
        else {libre = true;}
    }

    Procedure Reponer() {
        wait(cvRepositor);
        botellas = 20;
        signal(cvBotella);
    }
}

